#!/bin/bash
#冒泡排序
#类似气泡上涌的动作,会将数据在数组中从小到大或者从大到小不断的向前移动。
#基本思想：
#冒泡排序的基本思想是对比相邻的两个元素值,如果满足条件就交换元素值,把较小的元素移动到数组前面,把大的元素移动到数组后面(也就是交换两个元素的位置) ,这样较小的元素就像气泡一样从底部上升到顶部
#算法思路：
#冒泡算法由双层循环实现,其中外部循环用于控制排序轮数,一般为要排序的数组长度减1次,因为最后一次循环只剩下一个数组元素,不需要对比,同时数组已经完成排序了。而内部循环主要用于对比数组中每个相邻元素的大小,以确定是否交换位置,对比和交换次数随排序轮数而减少。
array=(60 20 30 50 10 40) #定义一个数组
echo "原数组参数顺序为：${array[*]}"
for ((i=1;i<${#array[*]};i++)) #定义排序轮次
do
    for ((a=0;a<${#array[*]}-i;a++)) #确定第一个元素的索引位置
    do
        if [ ${array[$a]} -gt ${array[$a+1]} ];then #第一个元素和第二个元素比较，如果第一个元素比第二个元素大则互换
           temp=${array[$a]}  #把第一个元素的值保存在临时变量temp中
           array[$a]=${array[$a+1]}  #把第二个元素的值赋给第一个元素
           array[$a+1]=$temp #把原第一个元素的值，赋给第二个元素
        fi
    done
done
echo "冒泡排序后，数组顺序为：${array[*]}"
