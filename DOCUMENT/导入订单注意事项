如果导入了订单，对吞掉的订单心中没数。每次没订单了，又重新的导入下一轮新的订单。存在如下的弊端：
1.一是造car数据耗时间长，二是给存储car的空间有限，三是给节点封装的额度本来也有限。如果每轮都存在吞单的问题又不及时处理，就可想而知了
2.如果重启了boost或者是封装的程序，之前吞掉的很多订单就可能又分派过来封装了
3.针对又分派过来的订单可能是前几轮导入的，这样的话，就无法保证完成封装的整个过程，因为在时间上就可能存在订单过期的问题
4.P2上链前能提前预知会过期，就当时remove处理掉了还好说。对于那些P2上链预质押了后又订单过期了，无法再继续完成封装后的整个过程了，也就浪费预质押了
5.或许会说不人为的重启boost或者是封装的程序，那如果出现程序挂掉或者是异常不得不重启程序了。所以个人建议每次导入了多少订单，心中要有数，及时找回吞掉的订单继续这轮的正常封装，不要遗留到下一轮，更不要放任不管

个人的建议：
1.导入订单封装前，要做到心中有数。建议记下封装前的扇区数量，目的就是封装前后有个对比。好计算吞单的具体数目
2.每轮导入订单，后面发现这轮没订单派发了，不要急着导入下一轮新的订单。先对比封装前和这轮封装后的扇区数量，是否有吞单的问题
3.如果有吞单的问题，在这一轮就及时处理好，不要遗留到下一轮。有说过具体的操作，就不再赘述了

针对吞掉的订单有遗留下来的处理办法：
1.就得提前确认吞掉的订单会不会存在过期，就得需要导出扇区的详细信息查看才能确认
2.或者是卸载miner机和算力机前几轮导入过的订单存储的car文件，只保留最新的，这样的话，省去了导出扇区详细信息的相关排查问题。就算后续重启了程序，也不会出现前几轮导入过的订单分派任务过来封装
